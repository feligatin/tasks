openapi: 3.0.3
info:
  title: Task Management System
  version: 0.0.0
  description: This is a task management system endpoints
paths:
  /api/sprints/:
    get:
      operationId: sprints_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - sprints
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Sprint'
          description: ''
    post:
      operationId: sprints_create
      tags:
      - sprints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sprint'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sprint'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sprint'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sprint'
          description: ''
  /api/sprints/{id}/:
    get:
      operationId: sprints_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sprint.
        required: true
      tags:
      - sprints
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sprint'
          description: ''
    put:
      operationId: sprints_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sprint.
        required: true
      tags:
      - sprints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sprint'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sprint'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sprint'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sprint'
          description: ''
    patch:
      operationId: sprints_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sprint.
        required: true
      tags:
      - sprints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSprint'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSprint'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSprint'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sprint'
          description: ''
    delete:
      operationId: sprints_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this sprint.
        required: true
      tags:
      - sprints
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/tasks/:
    get:
      operationId: tasks_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskSerializers'
          description: ''
    post:
      operationId: tasks_create
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskSerializers'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSerializers'
          description: ''
  /api/tasks/{id}/:
    get:
      operationId: tasks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSerializers'
          description: ''
    put:
      operationId: tasks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TaskSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TaskSerializers'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSerializers'
          description: ''
    patch:
      operationId: tasks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTaskSerializers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTaskSerializers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTaskSerializers'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskSerializers'
          description: ''
    delete:
      operationId: tasks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task.
        required: true
      tags:
      - tasks
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/token/:
    post:
      operationId: token_create
      tags:
      - token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserSerializers'
          description: ''
  /api/users/{username}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSerializers'
          description: ''
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    PatchedSprint:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 50
        description:
          type: string
          nullable: true
          maxLength: 150
        end_date:
          type: string
          format: date
        links:
          type: string
          readOnly: true
    PatchedTaskSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
          nullable: true
          maxLength: 150
        sprint:
          type: integer
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          minimum: -32768
          maximum: 32767
        status_display:
          type: string
          readOnly: true
        assigned:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
        start_date:
          type: string
          format: date
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
        completed_date:
          type: string
          format: date
          nullable: true
        links:
          type: string
          readOnly: true
    Sprint:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 50
        description:
          type: string
          nullable: true
          maxLength: 150
        end_date:
          type: string
          format: date
        links:
          type: string
          readOnly: true
      required:
      - end_date
      - id
      - links
    StatusEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      description: |-
        * `1` - NOT STARTED
        * `2` - WORKING ON
        * `3` - TESTING
        * `4` - FINISHED
    TaskSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        description:
          type: string
          nullable: true
          maxLength: 150
        sprint:
          type: integer
          nullable: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          minimum: -32768
          maximum: 32767
        status_display:
          type: string
          readOnly: true
        assigned:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        order:
          type: integer
          maximum: 32767
          minimum: -32768
        start_date:
          type: string
          format: date
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
        completed_date:
          type: string
          format: date
          nullable: true
        links:
          type: string
          readOnly: true
      required:
      - assigned
      - id
      - links
      - name
      - status_display
    UserSerializers:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        full_name:
          type: string
          readOnly: true
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        links:
          type: string
          readOnly: true
      required:
      - full_name
      - id
      - links
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
